# Generated by Django 5.1.5 on 2025-03-07 11:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Formulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='fullBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='banners')),
                ('brandName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_Name', models.CharField(max_length=100)),
                ('cat_image', models.ImageField(upload_to='primaryCat')),
                ('cat_Desc', models.TextField()),
                ('is_ageRestricted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProductBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('brand_name', models.CharField(max_length=255)),
                ('rating', models.FloatField(default=0.0)),
                ('total_purchased', models.PositiveIntegerField(default=0)),
                ('item_code', models.CharField(max_length=100, unique=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('formulation', models.CharField(blank=True, max_length=255, null=True)),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PricingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('offer', models.FloatField(blank=True, null=True)),
                ('ends_in', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing', to='store.productbase')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', max_length=50)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='store.productbase')),
            ],
        ),
        migrations.CreateModel(
            name='ImportantInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction_to_use', models.TextField()),
                ('direction_to_store', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='important_info', to='store.productbase')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('savedForLater', models.BooleanField(default=False)),
                ('qty', models.IntegerField(default=1)),
                ('uid', models.ForeignKey(blank=True, db_column='uid', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.CASCADE, to='store.productbase')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('image2', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('image3', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('image4', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('image5', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('image6', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('image7', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('image8', models.ImageField(upload_to='product_images/`{product.brand_name}`')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.productbase')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='store.productbase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('primary_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='store.primarycategory')),
            ],
        ),
        migrations.CreateModel(
            name='Tray',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_checked_out', models.BooleanField(default=False)),
                ('products', models.ManyToManyField(related_name='trays', to='store.productbase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trays', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
